import java.util.regex.Matcher

apply plugin: 'com.android.library'

def versionName() {
    String config = 'library/src/main/java/com/qiniu/android/dns/Version.java'
    String fileContents = new File(config).text
    Matcher myMatcher = fileContents =~ /VERSION = "(.+)";/
    String version = myMatcher[0][1]
    println(version)
    return version
}

def versionNameToCode(String version) {
    String v = version.replaceAll(/\./, '')
    return v.toLong()
}

String version = versionName()
int code = versionNameToCode(version)

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'
    defaultConfig {
        //applicationId "com.qiniu.android.dns"
        minSdkVersion 9
        targetSdkVersion 22
        versionCode code
        versionName version
    }
}

dependencies {
//    compile 'com.android.support:appcompat-v7:21.0.3'
    compile fileTree(include: ['*.jar'], dir: 'libs')
}

task releaseJar(type: Copy, dependsOn: 'build') {
    from('build/intermediates/bundles/release')
    into('../releases')
    include('classes.jar')
    rename('classes.jar', 'happy-dns-' + version + '.jar')
}

android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    task.exclude '**/R.*',  '**/R$*.*'
    artifacts.add('archives', task);
}

setProperty('VERSION_NAME', version)
setProperty('VERSION_CODE', code)

apply from: '../mvn_push.gradle'
